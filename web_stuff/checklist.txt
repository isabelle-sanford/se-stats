
The web interface must be written using Node.js

The web interface must run on the class database server (165.106.10.170).

The web interface must be up and running throughout the exam period. (You are not responsible for restarting your web system if the machine reboots after the last day of classes.) You should not use a cron-job or a system service to ensure that you system is running.

You system should never crash. That is there should not be any user interaction that can crash you system.
There must be a starting page for your web interface and that starting page must be named "index.html". Hence the URL for accessing your system should look like http://165.106.10.170:9999999 (where 99999 is a legitimate port number.)

On the starting page there must be a way to select whether the user is to interact with Mongo or Postgres data. Preferably this would be through a radio-button or a checkbox (or some other selection mechanism). It would also be acceptable (although less preferred) to have some queries go to Mongo and some to Postgres. Whatever approach is taken, it must be clear. (I am aware that this is actually very poor UI-wise. Users should neither know nor care the source of their data. Do it anyway. (As an aside, this is one of my many complaints with bionic. The first screen is crudely selecting the database you want to interact with.)

There should be at least 3 top level queries that access the data in totally different manners. That is very different queries.

At least one of the top-level queries should have a system for building a query. The system might involve drop-down menus and other forms of user interaction. (There are several such query builders in bionic. )

Once a query is built (or selected) the results should be presented in a well-formatted table.

Each table must be sortable on the client side by clicking on buttons in colum headers.

Every table must have at least one "drill down" element in each row. For instance, in a table about movies, the drill down element might be the actor name. Clicking on the that would give you more information about the actor.

The user interface must be easy to use and clear. Preferentially the interface should look good. However grading will only be on aesthetics to the extent that they are not horrible. That is, you will not receive bonus points for beauty, but you will loose points for ugly. Web pages for this course indicate a minimum standard.
